variables:
  GIT_SUBMODULE_STRATEGY: recursive
  K8S_PLAYGROUND_ROLE: k8s:v1/app-play1/namespace/threat-research/role/deployer
  K8S_STAGING_ROLE: k8s:v1/app-stage1/namespace/tr-st-deploy/role/deployer
  DOCKER_ROLE: docker:v1/registry/prefix/threat-research
  K8_DEPLOYER_CONTAINER: docker.repo.splunkdev.net/threat-research/k8-deployer
  SMOKETEST_RUNNER: docker.repo.splunkdev.net/threat-research/smoketest-runner
  SRCBRANCH: $CI_COMMIT_REF_NAME

stages:
  - ssa-validate
  - publish_smoketest_runner
  - publish_deployer
  - smoketest_staging

validate:
  stage: ssa-validate
  image: docker.repo.splunkdev.net/ci-cd/ci-container:alpine-3.11
  before_script:
    - apk add --update python3 python3-dev py-pip build-base openjdk8-jre zlib-dev jpeg-dev && pip install virtualenv && rm -rf /var/cache/apk/*
    - python3 -m pip install -U --force-reinstall pip && pip3 install -r requirements.txt
  script:
    - python3 bin/ssa_validate.py --skip-error detections/*/*
    - python3 bin/ssa_test.py --skip-error tests/*/*
    - python3 bin/testing_coverage.py --type streaming --min-coverage 1.0
  only:
    - /^ssa.*$/

publish_deployer:
  stage: publish_deployer
  image: docker.repo.splunkdev.net/ci-cd/ci-container:alpine-3.11
  before_script:
    - apk add --update docker
  script:
    - eval $(go-go vault -a ${DOCKER_ROLE})
    - cd bin/ssa-end-to-end-testing/k8s-deployer
    - docker build . -t ${K8_DEPLOYER_CONTAINER}:${CI_COMMIT_SHORT_SHA}
    - docker push ${K8_DEPLOYER_CONTAINER}:${CI_COMMIT_SHORT_SHA}
  only:
    - /^ssa.*$/

publish_smoketest_runner:
  stage: publish_smoketest_runner
  image: docker.repo.splunkdev.net/ci-cd/ci-container:alpine-3.11
  before_script:
    - apk add --update docker
  script:
    - eval $(go-go vault -a ${DOCKER_ROLE})
    - docker build bin/ssa-end-to-end-testing/smoke-test-runner -t ${SMOKETEST_RUNNER}:${CI_COMMIT_SHORT_SHA} --build-arg SRCBRANCH=$CI_COMMIT_REF_NAME
    - docker push ${SMOKETEST_RUNNER}:${CI_COMMIT_SHORT_SHA}
  only:
    - /^ssa.*$/

smoketest_staging:
  stage: smoketest_staging
  resource_group: staging
  dependencies:
    - publish_smoketest_runner
    - publish_deployer
  image: ${K8_DEPLOYER_CONTAINER}:${CI_COMMIT_SHORT_SHA}
  script:
    - eval $(go-go vault -a ${K8S_STAGING_ROLE})
    - eval $(go-go vault -a ${DOCKER_ROLE})
    - cd /deployer/k8s
    - ./deployer.sh
    - ./check_deploy_status.sh
  variables:
    SCSENV: app_staging1
    SMOKETEST_RUNNER_IMAGE: ${SMOKETEST_RUNNER}:${CI_COMMIT_SHORT_SHA}
  only:
    - /^ssa.*$/
